name: Selenium Java Test

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      demo-site:
        image: demo-site
        ports:
          - 8080:80
        options: >-
          --health-cmd "curl --fail http://localhost:8080/login.html || exit 1"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build frontend Docker image
        run: docker build -t demo-site frontend

      - name: Run frontend container
        run: docker run -d -p 8080:80 --name demo-site demo-site

      - name: Wait for frontend to become healthy
        run: |
          for i in {1..30}; do
            if curl --fail http://localhost:8080/login.html; then
              echo "Frontend is up."
              break
            fi
            echo "Waiting for frontend..."
            sleep 2
          done

      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget curl gnupg unzip
          wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      - name: Install matching ChromeDriver
        run: |
          BASE_URL="https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json"
          DRIVER_URL=$(curl -s $BASE_URL | jq -r '.channels.Stable.downloads.chromedriver[] | select(.platform == "linux64") | .url')
          wget -O chromedriver.zip "$DRIVER_URL"
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Run Selenium tests
        run: cd tests && mvn test
